name: Build 
 
on: [push]
env:
  NexusArtifactRepo: https://nexus.lieberlieber.com/repository/lemontree-pipeline-tools
  ModelName: ./src/Models/PWC.eapx
  ModelNameSqLite: ./src/Models/Model.qeax
  ProductVersion: ${{vars.PRODUCTVERSION}} 
  
jobs:
  build:
 
    runs-on: windows-latest
    
    steps:
     - name: Checkout Code
       uses: actions/checkout@v3.4.0
     
     - name: Setup MSBuild Path
       uses: microsoft/setup-msbuild@v1.1
       
     - name: Setup NuGet
       uses: NuGet/setup-nuget@v1.1.1
      
     - name: Restore NuGet Packages
       run: nuget restore src/LemonTree.Pipeline.Tools.sln

     - name: Set version in AssemblyInfo.cs
       id: set-assembly-version
       uses: secondbounce/assemblyinfo-update@v2
       with:
        version: '${{env.ProductVersion}}'
        directory: '.\src\'
        recursive: true

     - name: Display the version used
       run: echo "${{steps.set-assembly-version.outputs.version}}"
 
     - name: Build Solution
       run: msbuild src/LemonTree.Pipeline.Tools.sln /p:Configuration=Release

     - name: Publish Solution for Windows
       run: dotnet publish -c Release -r win-x86 src/LemonTree.Pipeline.Tools.sln

     - name: Publish Solution for Linux
       run: dotnet publish -c Release -r linux-x64 src/LemonTree.Pipeline.Tools.sln
       
     - name: Upload LemonTree.Pipeline.Tools.SetFilterInSessionFile.exe
       if: github.ref == 'refs/heads/main'
       run: |
          $targetUrl = "${{env.NexusArtifactRepo}}/LemonTree.Pipeline.Tools.SetFilterInSessionFile.exe"
          echo "Uploading 	LemonTree.Pipeline.Tools.SetFilterInSessionFile.exe to Nexus: $targetUrl"
          while (Test-Path Alias:curl) {Remove-Item Alias:curl} #remove the alias binding from curl to Invoke-WebRequest
          curl "-u${{secrets.NEXUSAUTHENTICATION}}" -T bin\LemonTree.Pipeline.Tools.SetFilterInSessionFile.exe $targetUrl
          
     - name: Upload LemonTree.Pipeline.Tools.RemovePrerenderedDiagrams.exe
       if: github.ref == 'refs/heads/main'
       run: |
          $targetUrl = "${{env.NexusArtifactRepo}}/LemonTree.Pipeline.Tools.RemovePrerenderedDiagrams.exe"
          echo "Uploading 	LemonTree.Pipeline.Tools.RemovePrerenderedDiagrams.exeto Nexus: $targetUrl"
          while (Test-Path Alias:curl) {Remove-Item Alias:curl} #remove the alias binding from curl to Invoke-WebRequest
          curl "-u${{secrets.NEXUSAUTHENTICATION}}" -T bin\LemonTree.Pipeline.Tools.RemovePrerenderedDiagrams.exe $targetUrl
     
     - name: Upload LemonTree.Pipeline.Tools.ModelCheck.exe
       if: github.ref == 'refs/heads/main'
       run: |
          $targetUrl = "${{env.NexusArtifactRepo}}/LemonTree.Pipeline.Tools.ModelCheck.exe"
          echo "Uploading 	LemonTree.Pipeline.Tools.ModelCheck.exe to Nexus: $targetUrl"
          while (Test-Path Alias:curl) {Remove-Item Alias:curl} #remove the alias binding from curl to Invoke-WebRequest
          curl "-u${{secrets.NEXUSAUTHENTICATION}}" -T bin\LemonTree.Pipeline.Tools.ModelCheck.exe $targetUrl
      
     - name: Upload LemonTree.Pipeline.Tools.ModelCheck
       if: github.ref == 'refs/heads/main'
       run: |
             $targetUrl = "${{env.NexusArtifactRepo}}/LemonTree.Pipeline.Tools.ModelCheck"
             echo "Uploading 	LemonTree.Pipeline.Tools.ModelCheck to Nexus: $targetUrl"
             while (Test-Path Alias:curl) {Remove-Item Alias:curl} #remove the alias binding from curl to Invoke-WebRequest
             curl "-u${{secrets.NEXUSAUTHENTICATION}}" -T bin\LemonTree.Pipeline.Tools.ModelCheck $targetUrl 

    #  - name: Upload LemonTree.Pipeline.Tools.GetModelRoots.exe
    #    if: github.ref == 'refs/heads/main'
    #    run: |
    #       $targetUrl = "${{env.NexusArtifactRepo}}/LemonTree.Pipeline.Tools.GetModelRoots"
    #       echo "Uploading 	LemonTree.Pipeline.Tools.GetModelRoots to Nexus: $targetUrl"
    #       while (Test-Path Alias:curl) {Remove-Item Alias:curl} #remove the alias binding from curl to Invoke-WebRequest
    #       curl "-u${{secrets.NEXUSAUTHENTICATION}}" -T bin\LemonTree.Pipeline.Tools.GetModelRoots.exe $targetUrl


     - name: Archive LemonTree.Pipeline.Tools.ModelCheck.Windows
       uses: actions/upload-artifact@v3
       with:
            name: LemonTree.Pipeline.Tools.ModelCheck.Windows
            path: "bin/LemonTree.Pipeline.Tools.ModelCheck.exe"
            retention-days: 2

     - name: Archive LemonTree.Pipeline.Tools.ModelCheck.Linux
       uses: actions/upload-artifact@v3
       with:
            name: LemonTree.Pipeline.Tools.ModelCheck.Linux
            path: "bin/LemonTree.Pipeline.Tools.ModelCheck"
            retention-days: 2

     
  TestOnWindowsJet:
    runs-on: windows-latest
    needs: build
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - name: Check out repository code
        uses: actions/checkout@v3
      
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
            name: LemonTree.Pipeline.Tools.ModelCheck.Windows

      
      - name: Run LemonTree Check Tool JET
        id: modelcheck
        shell: pwsh
        run: |
             echo "starting validation"
             .\LemonTree.Pipeline.Tools.ModelCheck.exe  --model "${{env.ModelName}}" --out ".\output.md" --FailOnErrors 

             Write-Output "# Modelcheck Windows .eapx" >> $env:GITHUB_STEP_SUMMARY
             Get-Content "output.md" >> $env:GITHUB_STEP_SUMMARY
   
             echo "finished validation with $LASTEXITCODE"
   
             #  Exit codes of LemonTree.Pipeline.Tools.ModelCheck.exe:
             #  * -2 = other runtime exception occurred
             #  * -1 = CLI argument parsing error occurred
             #  *  0 = model is valid (no error, no warning, no runtime exception)
             #  *  1 = model has at least one warning (only if --FailOnWarnings or --FailOnErrors)
             #  *  2 = model has at least one error  (only if --FailOnErrors)
         
             #for now never stop 
             exit 0

  TestOnWindowsSqlite:
    runs-on: windows-latest
    needs: build
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - name: Check out repository code
        uses: actions/checkout@v3
      
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
            name: LemonTree.Pipeline.Tools.ModelCheck.Windows
      - name: Run LemonTree Check Tool SqLite
        id: modelcheckSqlite
        shell: pwsh
        run: |
                echo "starting validation"
                .\LemonTree.Pipeline.Tools.ModelCheck.exe  --model "${{env.ModelNameSqLite}}" --out ".\output.md" 

                Write-Output "# Modelcheck Windows .qeax" >> $env:GITHUB_STEP_SUMMARY
                Get-Content "output.md" >> $env:GITHUB_STEP_SUMMARY

                echo "finished validation with $LASTEXITCODE"
      
                #  Exit codes of LemonTree.Pipeline.Tools.ModelCheck.exe:
                #  * -2 = other runtime exception occurred
                #  * -1 = CLI argument parsing error occurred
                #  *  0 = model is valid (no error, no warning, no runtime exception)
                #  *  1 = model has at least one warning (only if --FailOnWarnings or --FailOnErrors)
                #  *  2 = model has at least one error  (only if --FailOnErrors)
      
                $Message = "output.md"
      
                echo "modelcheckExitCode=$LASTEXITCODE" >> $env:GITHUB_OUTPUT
            
                #for now never stop 
                exit $LASTEXITCODE


  TestOnUbuntu:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          fetch-depth: 0

      - name: Check out repository code
        uses: actions/checkout@v3
      
      - name: Download a single artifact
        uses: actions/download-artifact@v3
        with:
            name: LemonTree.Pipeline.Tools.ModelCheck.Linux
      
      - name: Run LemonTree Check Tool SqLite
        id: modelcheckSqlite
        shell: pwsh
        run: |
                echo "starting validation"

                #workaround beause github doesn't maintain properties
                chmod 777 ./LemonTree.Pipeline.Tools.ModelCheck
              
                ./LemonTree.Pipeline.Tools.ModelCheck  --model "${{env.ModelNameSqLite}}" --out "./output.md" 
                Write-Output "# Modelcheck Linux .qeax" >> $env:GITHUB_STEP_SUMMARY
                Get-Content "output.md" >> $env:GITHUB_STEP_SUMMARY
      
                echo "finished validation with $LASTEXITCODE"
      
                #  Exit codes of LemonTree.Pipeline.Tools.ModelCheck.exe:
                #  * -2 = other runtime exception occurred
                #  * -1 = CLI argument parsing error occurred
                #  *  0 = model is valid (no error, no warning, no runtime exception)
                #  *  1 = model has at least one warning (only if --FailOnWarnings or --FailOnErrors)
                #  *  2 = model has at least one error  (only if --FailOnErrors)
                
                #for now never stop 
                exit 0

